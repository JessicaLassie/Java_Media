package fr.jl.boundaries;

import fr.jl.daos.FilmDAO;
import fr.jl.entities.Film;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import fr.jl.entities.Globale;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Jessica
 */
public class JifTousLesFilms extends javax.swing.JInternalFrame {

    private Connection cnx;
    private DefaultTableModel ldtm;

    /**
     * Creates new form JifTousLesFilms
     */
    public JifTousLesFilms() {
        initComponents();
        // Titre de la fenetre
        setTitle("Tous les films");
        // Ouverture de la fenetre en premier plan
        setVisible(true);
        // Taille de la fenetre
        setSize(975, 500);
        // Connexion à la BD
        cnx = Globale.getCnx();
        // Affichage de la table film dans la jTable
        try {
            // Recuperation du modèle de la jTable
            ldtm = (DefaultTableModel) jTableFilms.getModel();
        } catch (Exception ex) {
            jLabelMessage.setText(ex.getMessage());
        }
        // Remplissage tableau
        getFilms();
    }

    // Affichage de tous les films dans la jTable
    private void getFilms() {
        // Initialisation de la jTable à 0 en partant de la fin
        for (int i = ldtm.getRowCount() - 1; i >= 0; i--) {
            ldtm.removeRow(i);
        }
        try {
            // Déclaration de l'utilisation d'un tableau d'objet
            Object[] tLigne;
            // Déclaration de l'utilisation d'un objet DAO
            FilmDAO dao = new FilmDAO(cnx);
            // Récupération du résultat du selectAll dans une liste
            List<Film> liste = dao.selectAll();
            System.out.println(liste);
            // Parcours de la liste
            for (int i = 0; i < liste.size(); i++) {
                // Récupération des valeurs de i dans la liste
                Film film = liste.get(i);
                // Définition du nombre d'objets dans le tableau
                tLigne = new Object[10];
                // Récupération des valeurs trouvées
                tLigne[0] = film.getTitreFilm();
                tLigne[1] = film.getNomRealisateur();
                tLigne[2] = film.getNomActeur();
                tLigne[3] = film.getLibelleGenre();
                tLigne[4] = film.getAnnee();
                tLigne[5] = film.getDuree();
                tLigne[6] = film.getLibelleSupport();
                tLigne[7] = film.getNomProprietaire();
                tLigne[8] = film.getLibelleEtat();
                tLigne[9] = film.getCommentaire();
                // Ajout des valeurs trouvées dans la jTable
                ldtm.addRow(tLigne);
            }
            // Calcul du nombre de lignes dans la jTable
            int nbLigne = ldtm.getRowCount();
            // Affichage du nombre de ligne dans le jLabel
            jLabelMessage.setText("Nombre de films : " + Integer.toString(nbLigne));
        } catch (Exception e) {
            System.out.println(e.getMessage());
            // Affichage d'une boite de dialogue indiquant l'erreur
            JOptionPane message;
            message = new JOptionPane();
            message.showMessageDialog(null, "Erreur de chargement de la base de donnée", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    };


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFilms = new javax.swing.JTable();
        jLabelMessage = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Tous les films");
        setMinimumSize(new java.awt.Dimension(975, 500));

        jTableFilms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titre Film", "Realisateur", "Acteur Principal", "Genre", "Année", "Durée", "Support", "Propriétaire", "Etat", "Commentaire"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableFilms);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMessage)
                .addGap(0, 36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableFilms;
    // End of variables declaration//GEN-END:variables
}
